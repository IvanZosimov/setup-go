name: validate Windows installation

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  create-link-on-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        cache: [false, true]
        go: [1.20.1, 1.20.5]
    name: 'Setup ${{ matrix.go }} cache: ${{ matrix.cache }}'
    steps:
      - uses: actions/checkout@v3

      - uses: ./
        with:
          go-version: ${{ matrix.go }}
          cache: ${{ matrix.cache }}
        name: v4-cache-${{ matrix.cache }}

      - run: |
          if [ -e 'D:\hostedtoolcache\windows\go\${{ matrix.go }}\x64' ];then
            echo 'D:\hostedtoolcache\windows\go\${{ matrix.go }}\x64 should not exist for hosted version of go';
            exit 1
          fi

          du -m -s 'C:\hostedtoolcache\windows\go\${{ matrix.go }}\x64'
          # make sure drive c: contains the folder
          size=$(du -m -s 'C:\hostedtoolcache\windows\go\${{ matrix.go }}\x64'|cut -f1 -d$'\t')
          if [ $size -eq 0 ];then
            echo 'Size of the hosted go installed on drive c: must be above zero'
            exit 1
          fi
        shell: bash
        name: Hosted go should not have link
        if: ${{ matrix.go == '1.20.5' }}

      - run: |
          du -m -s 'D:\hostedtoolcache\windows\go\${{ matrix.go }}\x64'
          size=$(du -m -s 'D:\hostedtoolcache\windows\go\${{ matrix.go }}\x64'|cut -f1 -d$'\t')
          # make sure archive does not take lot of space
          if [ $size -gt 999 ];then
            echo 'Size of installed on drive d: go is too big';
            exit 1
          fi

          du -m -s 'C:\hostedtoolcache\windows\go\${{ matrix.go }}\x64'
          # make sure drive c: contains only a link
          size=$(du -m -s 'C:\hostedtoolcache\windows\go\${{ matrix.go }}\x64'|cut -f1 -d$'\t')
          if [ $size -ne 0 ];then
            echo 'Size of the link created on drive c: must be 0'
            exit 1
          fi
        shell: bash
        name: Disk usage
        if: ${{ matrix.go != '1.20.5' }}

      - run: |
          echo $PATH
          which go
          go version
          go env
          if [ $(which go) != '/c/hostedtoolcache/windows/go/${{ matrix.go }}/x64/bin/go' ];then
            echo 'which go should return "/c/hostedtoolcache/windows/go/${{ matrix.go }}/x64/bin/go"'
            exit 1
          fi
          if [ $(go env GOROOT) != 'C:\hostedtoolcache\windows\go\${{ matrix.go }}\x64' ];then 
            echo 'go env GOROOT should return "C:\hostedtoolcache\windows\go\${{ matrix.go }}\x64"'
            exit 1
          fi
        shell: bash
        name: test paths and environments
